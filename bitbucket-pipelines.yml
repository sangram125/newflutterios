pipelines:
  pull-requests:
    '*/CMA-*':
      - step:
          name: Build
          size: 2x
          image: sangrambhau/cicd-flutter-java-17:v1
          caches:
            - gradle
          script:
            # Configure AWS CLI (make sure to set your AWS credentials in Bitbucket environment variables)
            - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            - aws configure set default.region $AWS_REGION
            # Download the required file from S3
            - aws s3 cp s3://cicd-bitbucket-hiddenfile-s3-bucket-flutter/releasekey.properties ./android
            - aws s3 cp s3://cicd-bitbucket-hiddenfile-s3-bucket-flutter/releasekey.jks ./android/app/
            - ls ./android
            - ls ./android/app/
            # Extract version from pubspec.yaml
            - |
                VERSION_NAME=$(grep 'version: ' pubspec.yaml | sed 's/version: //')
            - |
                echo "Extracted VERSION_NAME: $VERSION_NAME"
            # Build App Bundle
            - flutter clean
            - flutter pub get
            - flutter pub upgrade
            #- flutter test --machine --coverage > tests.output
            - flutter build apk --release
            - APK_PATH="build/app/outputs/flutter-apk/app-release.apk"
            - |
                  JIRA_ISSUE_KEY=$(echo $BITBUCKET_BRANCH | grep -o 'CMA-[0-9]\+')
                  echo "Jira Issue Key: $JIRA_ISSUE_KEY"
                  if [ -z "$JIRA_ISSUE_KEY" ]; then
                    echo "Jira issue key not found in branch name"
                    exit 1
                  fi
            - NEW_FILE_NAME="${JIRA_ISSUE_KEY}-dor-companion-app-${VERSION_NAME}.apk"
            - mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/$NEW_FILE_NAME
            - |
                 curl -D- -u $JIRA_USERNAME:$JIRA_API_TOKEN -X POST -H "X-Atlassian-Token: no-check" -F "file=@build/app/outputs/flutter-apk/$NEW_FILE_NAME" "https://streambox-media.atlassian.net/rest/api/2/issue/$JIRA_ISSUE_KEY/attachments"
          artifacts:
            - build/app/outputs/flutter-apk/app-release.apk
  
  branches:
    Quality:
      - parallel:
          - step:
              name: Build
              size: 2x 
              image: sangrambhau/cicd-flutter-java-17:v1
              caches:
                - gradle
              script:
                # Configure AWS CLI (make sure to set your AWS credentials in Bitbucket environment variables)
                - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
                - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
                - aws configure set default.region $AWS_REGION
                # Download the required file from S3
                - aws s3 cp s3://cicd-bitbucket-hiddenfile-s3-bucket-flutter/releasekey.properties ./android
                - aws s3 cp s3://cicd-bitbucket-hiddenfile-s3-bucket-flutter/releasekey.jks ./android/app/
                - ls ./android
                - ls ./android/app/
                # Extract version from pubspec.yaml
                - |
                    VERSION_NAME=$(grep 'version: ' pubspec.yaml | sed 's/version: //')
                - |
                    echo "Extracted VERSION_NAME: $VERSION_NAME"
                # Build App Bundle
                - flutter clean
                - flutter pub get
                - flutter pub upgrade
                - flutter build apk --release
                - NEW_FILE_NAME="${BITBUCKET_BRANCH}-dor-companion-app-${VERSION_NAME}.apk.apk"
                - mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/$NEW_FILE_NAME
                - |
                   curl -F file=@build/app/outputs/flutter-apk/$NEW_FILE_NAME -F channels=$SLACK_CHANNEL -H "Authorization: Bearer $SLACK_API_TOKEN" https://slack.com/api/files.upload
              artifacts:
                - build/app/outputs/flutter-apk/app-release.apk

          - step:
              name: SonarQube
              image: sangrambhau/sonar-flutter-cicd:v1
              caches:
                - gradle
              script:
                - sonar-scanner -Dsonar.projectKey=dor-companion-app -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.token=$SONAR_TOKEN
                #- apk add --no-cache jq
                #- |
                      #QUALITY_GATES_STATUS=$(curl -s -u $SONAR_TOKEN: $SONAR_HOST_URL/api/qualitygates/project_status?projectKey=dor-companion-app | jq -r .projectStatus.status)
                      #echo "Quality Gates Status: $QUALITY_GATES_STATUS"
                      #if [ "$QUALITY_GATES_STATUS" != "OK" ]; then
                        #echo "Quality Gate failed"
                        #exit 1
                      #else
                        #echo "Quality Gate passed"
                      #fi

  
    Pre-Prod:
      - step:
          name: Build
          size: 2x
          image: sangrambhau/cicd-flutter-java-17:v1
          caches:
            - gradle
          script:
            # Configure AWS CLI (make sure to set your AWS credentials in Bitbucket environment variables)
            - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            - aws configure set default.region $AWS_REGION
            # Download the required file from S3
            - aws s3 cp s3://cicd-bitbucket-hiddenfile-s3-bucket-flutter/releasekey.properties ./android
            - aws s3 cp s3://cicd-bitbucket-hiddenfile-s3-bucket-flutter/releasekey.jks ./android/app/
            - ls ./android
            - ls ./android/app/
            # Extract version from pubspec.yaml
            - |
                VERSION_NAME=$(grep 'version: ' pubspec.yaml | sed 's/version: //')
            - |
                echo "Extracted VERSION_NAME: $VERSION_NAME"
            # Build App Bundle
            - flutter clean
            - flutter pub get
            - flutter pub upgrade
            #- flutter test --machine --coverage > tests.output
            - flutter build apk --release
            - NEW_FILE_NAME="${BITBUCKET_BRANCH}-dor-companion-app-${VERSION_NAME}.apk.apk"
            - mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/$NEW_FILE_NAME
            - |
                curl -F file=@build/app/outputs/flutter-apk/$NEW_FILE_NAME -F channels=$SLACK_CHANNEL -H "Authorization: Bearer $SLACK_API_TOKEN" https://slack.com/api/files.upload
          artifacts:
            - build/app/outputs/flutter-apk/app-release.apk

  
    main:
      - step:
          name: Build
          size: 2x
          image: sangrambhau/cicd-flutter-java-17:v1
          caches:
            - gradle
          script:
            # Configure AWS CLI (make sure to set your AWS credentials in Bitbucket environment variables)
            - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            - aws configure set default.region $AWS_REGION
            # Download the required file from S3
            - aws s3 cp s3://cicd-bitbucket-hiddenfile-s3-bucket-flutter/releasekey.properties ./android
            - aws s3 cp s3://cicd-bitbucket-hiddenfile-s3-bucket-flutter/releasekey.jks ./android/app/
            - ls ./android
            - ls ./android/app/
            # Extract version from pubspec.yaml
            - |
                VERSION_NAME=$(grep 'version: ' pubspec.yaml | sed 's/version: //')
            - |
                echo "Extracted VERSION_NAME: $VERSION_NAME"
            # Build App Bundle
            - flutter clean
            - flutter pub get
            - flutter pub upgrade
            #- flutter test --machine --coverage > tests.output
            - flutter build apk --release
            - NEW_FILE_NAME="${BITBUCKET_BRANCH}-dor-companion-app-${VERSION_NAME}.apk.apk"
            - mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/$NEW_FILE_NAME
            - |
                curl -F file=@build/app/outputs/flutter-apk/$NEW_FILE_NAME -F channels=$SLACK_CHANNEL -H "Authorization: Bearer $SLACK_API_TOKEN" https://slack.com/api/files.upload
          artifacts:
            - build/app/outputs/flutter-apk/app-release.apk
            
            
                

          